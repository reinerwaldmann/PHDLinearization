Функциональные группы
1. Генерация тестовых последовательностей
Группа функций с одной главной

Входные параметры:
словарь входных функций  - выходная переменная к строке функции
словарь значений входных переменных  - входная переменная к списку значений (возможно, задаваемому как arange, range или каким-либо ещё образом). Если вх. перем. имеют разброс, то это список матожиданий
список переменных с разбросом, в строковом представлении
V, ковариационная матрица переменных с разбросом. Диагональная V говорит о наличии дисперсии, но отсутствии ковариации
nvolx, размер выборки входных переменных, получаемых с разбросом, для каждого матожидания
словарь дисперсий выходных переменных - выходная переменная - дисперсия.
nvoly, размер выборки выходных переменых, получаемых с разбросом, для каждого матожидания
имя выходного файла, если имеется потребность в записи входных и выходных переменных в выходной файл


Выходные значения:
список словарей выходная переменная - значение
опционально файл, где записаны входные переменные - выходные переменные. Столбцы озаглавливаются.

Описание результатов функции:
Функция способна в широких пределах моделировать экспериментальные данные, получаемые в процессе исследования
сущности, задаваемой многооткликовой моделью. На вход функции подаются списки возможных значений входных переменных и
вид модели, на выходе же мы получаем значения, выдаваемые моделью. Функция поддерживает возможность работы с разбросами двух вариантов:

1. Разброс входных переменных
Моделируется случай, когда мы считаем, что некоторые входные переменные, возможно, все, распределены нормально,
и нам известны их матожидания и ковариационная матрица. В этом случае мы задаём эти параметры функции и на выходе получаем конкретные значения
входных переменных в каждом случае и значения выходных переменных, получаемые расчётом функции. Размер выборки устанавливается переменной nvolx
Подобный вариант хорошо подойдёт для расчёта статистических характеристик модели методом Монте-Карло.

2. Разброс выходных переменных
Моделируется случай, когда мы считаем, что в модели присутствует некоторый случайный компонент, который отсутствует в формуле модели,
но мы знаем, что, вследствие его наличия при фиксированных значениях входных переменных выходные переменные выражены нормальным  распределением,
матожидание которого является значением функции при данных входных переменных, а дисперсия нам известна.
Подобный вариант может применяться при подгонке коэффициентов многооткликовой модели, если мы знаем, что модель имеет такой характер.

3. Разброс входных и выходных переменых. Является комбинацией предыдущих двух вариантов.


Ограничения
Функции должны быть такими, что могут быть рассчитаны оператором eval. (опционально создаются версии функции, которые принимают на вход ссылки на функции, рассчитывающие значения вых. перем)
Список ключей словаря входных функций=список ключей словаря дисперсий выходных переменных
Список ключей словаря входных переменных = список переменных в строковом представлении функций
Ковариационная матрица V должна быть квадратной и симметричной, её определитель больше 0, её размер должен быть равен длине списка переменных с разбросом
Размеры выборки должны быть >0
Выходной файл должен быть готовым для записи, в т. ч. для перезаписи

*словарь входных функций  - выходная переменная к строке функции
*словарь значений входных переменных  - входная переменная к списку значений (возможно, задаваемому как arange, range или каким-либо ещё образом). Если вх. перем. имеют разброс, то это список матожиданий
список переменных с разбросом, в строковом представлении
V, ковариационная матрица переменных с разбросом. Диагональная V говорит о наличии дисперсии, но отсутствии ковариации
nvolx, размер выборки входных переменных, получаемых с разбросом, для каждого матожидания
словарь дисперсий выходных переменных - выходная переменная - дисперсия.
nvoly, размер выборки выходных переменых, получаемых с разбросом, для каждого матожидания
имя выходного файла, если имеется потребность в записи входных и выходных переменных в выходной файл
-Звёздочки (*) обозначают обязательные параметры



2. Взятие производной в символьном виде, получения якобиана и псевдогессиана
derivations.py
Содержит в себе ряд функций, осуществляющих дифференцирование функций, образовывающих в общем случае многооткликовые модели.
Для процесса собственно дифференцирования использует библиотеку sympy

Функции указаны по мере оборачивания:

def deriv_func_seq (fun_seq, argseq, arginitseq, n=1):
    """
    Производит символьное дифференцирование последовательности функций. Возвращает значения производных
    На вход получает список из строковых значений функций,
    на выходе возвращает словарь строковое функции - значение производной
    при приложении arginitseq, как словаря значений переменных.
    n - номер производной
    """


def evalderivsymv (funcstr, argseq, arginitseq, n=1):
    """
    Вычисляет значения производных функции по всем аргументам, заданным в argseq
    arginitseq - значения переменных (всех)
    funcstr - строка, являющая собою функцию
    argseq - последовательность из аргументов, заданных как строки
    возвращает словарь: переменная - значение производной при приложении словаря значений переменных arginitseq
    """
     Алгоритм следующий:
    Сначала проверяем наличие словаря символьных представлений производных в глобальной переменной derivdict. Если оно None,
    то проверяем, есть ли файл с хешем. Если файла нет, то считаем производные символьно нижележащей функций (и пишем их в файл,
    именем которого является хеш, см. makefunnyhash). Если не None, то считаем, применяя локальный кеш.


def derivsym (funcstr, argseq, n=1):
    """
    Производит символьное дифференцирование входящей функции по переменным из последовательности argseq
    возвращает словарь переменная - строковое представление функции
    funcstr - строка, являющая собою функцию
    argseq - последовательность из аргументов, заданных как строки
    n - номер производной

    """



Якобиан
это функция, возвращающая np.array (то есть, матрицу по сути),
являющая собой производные всех функций по всем переменным,
df1/dfx1  df1/dx2
df2/dfx1  df2/dx2




Сервисная функция:
def makefunnyhash (funcstr, n):
    """
    Делает имя файла из функции и номера производной.
    Требует наличия доступной папки funcs для работы скрипта, иначе производит ошибки
    """



