VERSION 5.00
Begin VB.Form Form1 
   Caption         =   "Планирование эксперимента"
   ClientHeight    =   8895
   ClientLeft      =   45
   ClientTop       =   330
   ClientWidth     =   4770
   LinkTopic       =   "Form1"
   ScaleHeight     =   8895
   ScaleWidth      =   4770
   StartUpPosition =   3  'Windows Default
End
Attribute VB_Name = "Form1"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Private Sub Form_Click()
Rem Построение априорного оптимального плана эксперимента
Rem для нелинейной по коэффициентам модели Эберса-Молла по критерию среднего определителя
Rem ковариационной матрицы оценок коэффициентов
Rem методом поиска на основе алгоритма половинного деления с ограничениями,
Rem задаваемыми штрафными функциями

Dim N, P, MM, M, MD, K, C, I, J, S, SS As Integer
Dim L, L1, SSS, U, H, HH, R, LL(50)  As Integer
Dim D, D2, D3, D4, D5, D6, DS, DR, SD As Double
Dim D1(20, 20), DD(20, 20), KK(20, 20), G(10, 10) As Double
Dim X(200, 200), B3(20) As Double
Dim A(20, 20), F(20, 10), V(20, 10), CC(20), GG(20) As Double
Dim X1(200, 200), X2(20000), Y(500, 200), DI(20) As Double
Dim XB(20), LX(20), DX(20) As Double
Dim Y1(20) As Double
Dim Y2(20) As Double
Dim YF(20) As Double
Dim O(20) As Double
Dim W(20) As Double
Dim Q(20, 20) As Double
Dim P1(10, 20) As Double
Dim P2(10, 20) As Double
Dim VB(10, 10) As Double
Dim B2(20), B1(20), B(20)
Dim B4(100)
Dim B5(100)

Rem################################################################################
Rem#############################################################################

Rem Задание исходных данных

P = 2 'Число контролируемых параметров
K = 2 ' Количество уравнений в модели (число откликов)
M = 4 ' Количество коэффициентов многооткликовой модели
N = 50 'Число точек плана эксперимента

XB(1) = 0.1 ' Начало диапазона изменения первого параметра (напряжение на эмиттере)
LX(1) = 0.95  ' Длина диапазона изменения первого параметра
XB(2) = 10 ' Начало диапазона изменения второго параметра (напряжение на коллекторе)
LX(2) = 5 ' Длина диапазона изменения второго параметра

D0 = 1000000 ' Исходная величина определителя ковариационной матрицы плана

For SS = 1 To 1 'Количество повторений поиска оптимального плана из различных исходных случайных планов

Rem Генерация точек исходного плана
Randomize
For I = 1 To N
For J = 1 To P
X(I, J) = XB(J) + Rnd() * LX(J)
Next J
Next I

For I = 1 To K ' Ковариационная матрица ошибок наблюдений DD
For J = 1 To K ' Вообще эту матрицу нужно получить в результате исследования
If I = J Then DD(I, J) = 0.000001 Else DD(I, J) = 0
Next J
Next I ' Матрица D - единичная

For I = 1 To K ' Обращение матрицы DD ошибок наблюдений
For J = 1 To K
A(I, J) = DD(I, J)
Next J
Next I
M1 = K
Call S1111(M1, A, D1, D) 'Обратная матрица - D1(), D - определитель матрицы K

For I = 1 To K ' Переименование матрицы D1 в DD
For J = 1 To K
KK(I, J) = D1(I, J)
Next J
Next I

Rem###############################################################################
Rem Задание исходного плана эксперимента и диапазона изменения параметров
For I = 1 To N
For J = 1 To P
Y(I, J) = X(I, J)
Next J
Next I

Rem Задание равномерного распределения коэффициентов нелинейной модели
CC(1) = 16 'Нижняя граница для первого коэффициента RB
GG(1) = 6 '.1 'Длина диапазона изменения первого коэффициента
CC(2) = 0.6 'AF
GG(2) = 0.499 '
CC(3) = 5E-16 'ISE
GG(3) = 0.000000000000002 '.1
CC(4) = 0.5 '1/NE
GG(4) = 0.3 '

Rem##############################################################################
Rem#############################################################################

Rem Начало расчета оптимального плана

Rem Расчет среднего определителя ковариационной матрицы для исходного плана
Call S4000(G, W, B2, Y, Y2, Y1, YF, Q, P1, P2, O, F, GG, CC, DR, D1, V, KK, DD, A, M, N, P, K, D2, D, DS, SD)

DR = D2
D6 = DR ' Начальное значение определителя для случайного плана
Print D6

M7000:

For S = 1 To N ' Номер оптимизируемой точки плана

For I = 1 To P
DI(I) = LX(I) / 3 'Начальный шаг поиска по параметрам
Next I

For I = 1 To P 'Поиск по отдельным параметрам

M5000:
For H = 1 To N 'Новый текущий план
For J = 1 To P
Y(H, J) = X(H, J)
Next J
Next H

Call S4000(G, W, B2, Y, Y2, Y1, YF, Q, P1, P2, O, F, GG, CC, DR, D1, V, KK, DD, A, M, N, P, K, D2, D, DS, SD) 'Расчет значения функции
D3 = D2

Y(S, I) = X(S, I) + DI(I)
Call S4000(G, W, B2, Y, Y2, Y1, YF, Q, P1, P2, O, F, GG, CC, DR, D1, V, KK, DD, A, M, N, P, K, D2, D, DS, SD)
D4 = D2

If Y(S, I) > XB(I) + LX(I) Then D4 = 1 'Назначение штрафа при выходе за пределы

Y(S, I) = X(S, I) - DI(I)
Call S4000(G, W, B2, Y, Y2, Y1, YF, Q, P1, P2, O, F, GG, CC, DR, D1, V, KK, DD, A, M, N, P, K, D2, D, DS, SD)
D5 = D2

If Y(S, I) < XB(I) Then D5 = 1 'Назначение штрафа при выходе за пределы

If (D3 - D4) * (D3 - D5) > 0 Then GoTo M12
If D4 > D5 Then GoTo M13
X(S, I) = X(S, I) + DI(I) 'Точка плана сдвигается
GoTo M5000

M13:
X(S, I) = X(S, I) - DI(I)
GoTo M5000
M12:
DI(I) = DI(I) / 2 'Шаг поиска уменьшается на половину
If DI(I) < (LX(I) / 1000) Then GoTo M11 'Наименьший шаг поиска - критерий останова поиска
GoTo M5000 'Наименьший шаг не достигнут
M11:
Next I 'Переход к следующей независимой переменной

Next S 'Конец перебора по точкам плана

Rem#############################################################################
Rem############################################################################

Print D3 'Вывод определителя для текущего оптимального плана

If D3 <= D0 Then D0 = D

Next SS 'Конец перебора по разным исоходным планам

Print D3 'Вывод оприорного определителя для оптимального плана, конец расчета оптимального плана
Print SD ' Вывод среднеквардратического отклонения D3

'Конец построения оптимального плана X(S, J)

Rem####################################################################################
Rem###################################################################################

Call S1233(N, P, D3, SD, X) 'Запись оптимального плана в файл

End Sub 'Конец программы
Private Sub S4000(G, W, B2, Y, Y2, Y1, YF, Q, P1, P2, O, F, GG, CC, DR, D1, V, KK, DD, A, M, N, P, K, D2, D, DS, SD)
Rem Подпрограмма расчета  среднего определителя
Rem ковариационной матрицы оценок коэффициентов модели
Rem для заданных матожиданий и диапазона изменения коэффициентов модели

'Начало цикла статистических испытаний
DS = 0 'Начальный средний определитель ковариационной матрицы
SD = 0 'Начальное среднеквадратическое отклонение среднего

For SSS = 1 To 30 'Число статистических испытаний для расчета среднего определителя


M9999:
Rem Моделирование значений коэффициентов модели в соответствии с равномерным распределением
Randomize
For I = 1 To M
B2(I) = CC(I) + Rnd() * GG(I)
Next I

For I = 1 To M
For J = 1 To M
G(I, J) = 0
Next
Next ' Вспомогательная матрица G

Rem#################################################################################
Rem Расчет ковариационной матрицы ошибок коэффициентов

'Начало цикла для расчета сумм, N - число наблюдений
For U = 1 To N

For I = 1 To P 'Электрический режим в каждой точке плана
W(I) = Y(U, I)
Next

Call S6639(K, M, U, W, B2, Y, Y2, Y1, YF, KK, A, Q, O, D1, D, P1, P2, DS, SD) 'Расчет матрицы производных по коэффициентам P2

For I = 1 To M ' Умножение матрицы производной по коэффициентам P2 на P2
For J = 1 To K ' K - число уравнений в модели
S = 0
For L = 1 To K
S = S + P2(L, I) * KK(L, J)
Next
V(I, J) = S 'MxK
Next
Next

For I = 1 To M ' Умножение матрицы производной по коэффициентам P2 на P2
For J = 1 To M
S = 0
For L = 1 To K
S = S + V(I, L) * P2(L, J)
Next
P1(I, J) = S 'размерность MxM
Next
Next

For I = 1 To M
For J = 1 To M
G(I, J) = G(I, J) + P1(I, J) 'Сумма матриц по всем наблюдениям
Next
Next ' Итог - матрица G

Next U ' Конец цикла по количеству наблюдений для расчета сумм

For I = 1 To M ' Подготовка к обращению матрицы G
For J = 1 To M
A(I, J) = G(I, J)
Next J
Next I

M1 = M
' Обращение матрицы G и расчет ее определителя det=D
Call S1111(M1, A, D1, D)

For I = 1 To M
For J = 1 To M
G(I, J) = D1(I, J) 'Ковариационная матрица оценок коэффициентов
Next
Next
Call S1111(M1, A, D1, D) ' Обращение матрицы K и расчет ее определителя det=D
' Тогда нужный определитель равен 1/D
D2 = 1 / D ' Определитель ковариационной матрицы оценок коэффициентов

If D2 < 0 Then GoTo M9999 'Определитель не может быть отрицательным

DS = (D2 + (SSS - 1) * DS) / SSS ' Среднее значение определителя
SD = ((DS - D2) * (DS - D2) + (SSS - 1) * SD) / SSS 'Дисперсия

Next SSS 'Конец цикла статистических испытаний

SD = Sqr(SD / SSS) 'Среднеквадратическое отклонение среднего
D2 = DS

End Sub
Private Sub S6639(K, M, U, W, B2, Y, Y2, Y1, YF, KK, A, Q, O, D1, D, P1, P2, DS, SD)
'Расчет токов в ветвях при заданных параметрах схемы
'Начальное приближение токов в ветвях

Y2(1) = 0.0001
Y2(2) = 0.0001
M10:
For I = 1 To K
Y1(I) = Y2(I)
Next 'Текущие значения коэффициентов

Call S3039(Y2, B2, W, YF, Q, P1) 'Расчет структурной матрицы Q и расчетных значений отклика Y

For I = 1 To K ' Переименование матрицы Q в A
For J = 1 To K
A(I, J) = Q(I, J)
Next J
Next I

M1 = K
Call S1111(M1, A, D1, D) 'Обратная матрица - D1(), D - определитель матрицы K
For I = 1 To K ' Переименование матрицы D1 в Q
For J = 1 To K
Q(I, J) = D1(I, J) ' Обратная матрица производных
Next J
Next I

For I = 1 To K ' Умножение обращенной матрицы Q на матрицу YF
S = 0
For L = 1 To K
S = S + Q(I, L) * YF(L)
Next L
O(I) = S
Next I

For J = 1 To K
Y2(J) = Y1(J) - 0.5 * O(J) 'уменьшение шага приращения для уменьшения расходимости
Next J

For J = 1 To K ' Критерий останова итерационной процедуры
If Abs((Y2(J) - Y1(J)) / Y1(J)) > 0.0000001 Then GoTo M10  ' На начало расчета оценок коэффициентов
Next J

'Производные от Y по B
For I = 1 To K ' Умножение матрицы
For J = 1 To M
S = 0
For L = 1 To K
S = S + Q(I, L) * P1(L, J) 'Умножаем производную YF по Y2 (ток) на производную производную от YF (ток) по B
Next L
P2(I, J) = S ' Результат умножения двух матриц - производная по B
Next J
Next I

'получается P2(I, J)- производная от Y2 (ток) по B, размерность KxM
For I = 1 To K
For J = 1 To M
P2(I, J) = P2(I, J) / Y2(I) ' Деление на Y2 (производная от логарифма)
Next J
Next I

End Sub
Private Sub S3039(Y2, B2, W, YF, Q, P1)
' Выбор модели, расчет откликов - токов в ветвях
' Расчет значений ее производных, получается матрица P1
Dim Z1 As Double
Dim Z2 As Double
Dim AF  As Double
Dim AR As Double

'B2(1)= RB
'B2(3)= ISE = 1.28E-15
ISC = 1.55E-15
FT = 0.026
'B2(2) = AF = 100 / 101
AR = 2 / 3
RС = 10
'B2(4) = 1/NE = 0,67
'W(1) - напряжение на эмиттере,Y2(1) - ток эмиттера
'W(2) - напряжение на коллекторе, Y2(2) - ток коллектора

' Расчет напряжений в узлах по токам в ветвях
Z1 = W(1) - Y2(1) * B2(1) 'Напряжение на базе с учетом сопротивления

YF(1) = Y2(1) + AR * ISC * (Exp(-W(2) / FT) - 1) - B2(3) * (Exp(Z1 * B2(4) / FT) - 1)
YF(2) = Y2(2) + ISC * (Exp(-W(2) / FT) - 1) - B2(2) * B2(3) * (Exp(Z1 * B2(4) / FT) - 1)
'Stop
'Производные YF по Y2
Q(1, 1) = 1 - (-B2(1)) * B2(3) * Exp(Z1 * B2(4) / FT) / FT * B2(4) 'YF1 по Z1
Q(1, 2) = 0
Q(2, 1) = -(-B2(1)) * B2(2) * B2(3) * Exp(Z1 * B2(4) / FT) / FT * B2(4)  'YF2 по Z1
Q(2, 2) = 1

'Производные от YF по B
P1(1, 1) = Y2(1) * B2(3) * Exp(Z1 / FT * B2(4)) / FT * B2(4)
P1(1, 2) = 0
P1(1, 3) = -(Exp(Z1 / FT * B2(4)) - 1)
P1(1, 4) = -B2(3) * Exp(Z1 / FT * B2(4)) * Z1 / FT
P1(2, 1) = Y2(1) * B2(2) * B2(3) * Exp(Z1 / FT * B2(4)) / FT * B2(4)
P1(2, 2) = -B2(3) * (Exp(Z1 / FT * B2(4)) - 1)
P1(2, 3) = -B2(2) * (Exp(Z1 / FT * B2(4)) - 1)
P1(2, 4) = -B2(2) * B2(3) * Exp(Z1 / FT * B2(4)) * Z1 / FT
'размерность KxM

End Sub
Private Sub S1233(N, P, D3, SD, X) 'Запись полученного оптимальногоо плана эксперимента в файл
Open "Plan.txt" For Output As #1
Write #1, D3
Write #1, SD
For I = 1 To N
For J = 1 To P
Write #1, X(I, J)
Next J
Next I
Close #1 'Close file.
End Sub ' Получен файл результатов расчета
Private Sub S5566(K, DD, Y1)
Rem Генерация ошибки с заданной ковариационной матрицей и нулевым матожиданием, распределение нормальное

Dim A(10, 10)
Dim YF(10)

Rem Начало расчета вспомогательной матрицы А
Rem для генерации с заданной дисперсионной матрицей DD
For I = 1 To K
For J = 1 To K
If J <= I Then GoTo M100 Else GoTo M200
M100:
Z = 0
For L = 1 To J - 1
Z = Z + A(I, L) * A(J, L)
Next L
Z1 = Z
Z = 0
For L = 1 To J - 1
Z = Z + A(J, L) * A(J, L)
Next L
Z2 = Z
A(I, J) = (DD(I, J) - Z1) / Sqr(DD(J, J) - Z2)
GoTo M300
M200:
A(I, J) = 0
M300:
Next J
Next I
Rem Моделирование погрешности измерений
Randomize
For J = 1 To K
L = 0
For R = 1 To 12
L = L + Rnd()
Next R
YF(J) = L - 6 ' Случайная величина с дисперсией 1 и мат. ожид =0
Next J
For J = 1 To K
Z = 0
For R = 1 To K
Z = Z + YF(R) * A(J, R)
Next R
Y1(J) = Z
Next J ' Ошибки наблюдений с заданной ковариационной матрицей и нулевым мат. ожид.

End Sub
Private Sub S1111(M1, A, D1, D) 'Подпрограмма обращения матрицы
For I = 1 To M1 ' Начало подпрограммы обращения матрицы A(I%,J%)
For J = 1 To M1
If I = J Then D1(I, J) = 1 Else D1(I, J) = 0
Next
Next
D = 1
Z = 1
For I = 1 To M1
P = 0
J = I
L = I
M4249: If Abs(A(L, J)) <> 0 Then GoTo M4256
P = 1
If L >= M1 Then GoTo M4254
L = L + 1
GoTo M4249
M4254: GoTo M2001
M4256: If P <> 1 Then GoTo M4266
For R = 1 To M1
T = A(L, R)
A(L, R) = A(I, R)
A(I, R) = T
T = D1(L, R)
D1(L, R) = D1(I, R)
D1(I, R) = T
Next
Z = -Z
M4266: M2 = 1 / A(I, I)
On Error GoTo M2001
D = D * A(I, I) 'Определитель прямой матрицы
On Error GoTo M2001
D = D * Z
For R = 1 To M1
D1(I, R) = D1(I, R) * M2
Next
For R = M1 To I + 1 Step -1
A(I, R) = A(I, R) * M2
Next
For L = 1 To M1
If L = I Then GoTo M4284
M2 = A(L, I)
For R = 1 To M1
D1(L, R) = D1(L, R) - D1(I, R) * M2
Next
For R = M1 To I + 1 Step -1
A(L, R) = A(L, R) - A(I, R) * M2
Next
M4284: Next
Next
GoTo M4287
M2001: Print "END"
M4287:
End Sub ' Конец подпрограммы обращения матрицы A, обратная матрица - D
